
#
# Copyright 2007 The Trustees of Indiana University
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or areed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# -----------------------------------------------------------------
#
# Project:		Karma Provenance Client
# File:			Notification.java
# Description:	README for Karma Service Client (Non-Webservice Client)
#
# -----------------------------------------------------------------
# 

$ Author: Yuan Luo (yuanluo@indiana.edu) $
======================================================================================
README for Karma Service Client (Non-Webservice Client)
======================================================================================
This README is on how to use Karma Service Client when Karma Server is hosted as standalone server using RabbitMQ for messaging.

==========================
1 Configure and Build Karma Service Client
==========================

cd ${Karma-Client-Core}

Edit build.properties:
Point the karma.client.properties to a valid properties path. Default is ${Karma-Client-Core}/config/karma.properties

ant

Client API can be found in ${Karma-Client-Core}/build/lib/karma-client.jar
Java Doc can be found under ${Karma-Client-Core}/doc

==========================
2 Use Karma Service Client
==========================

Edit ${Karma-Client-Core}/config/karma.properties properly. See Karma Server README for detailed information.

We offer 2 options to use Karma Service Client. 
2.1) We provide two sets of commands to ingest, query and test against Karma Server: Linux shell scripts, and ant command.

	a) Notification Ingest:
	./bin/sendNotification.sh config/karma.properties ${path_to_notification_xml_file}
	or 
	ant sendNotification -Dnotification=${path_to_notification_xml_file}
	
	b) Query:
	./bin/query.sh config/karma.properties ${path_to_query_xml_file}
	or
	ant query -Dquery=${path_to_query_xml_file}
	
	c) To run any main method in the karma client package
	./bin/KarmaRun.sh <Main Class> <Arguments>
	or,
	ant run -DrunClass=< Main Class > -DrunArgs=”<Arguments>”

2.2) Write your own application and invoke Karma Service Client API inside karma-client.jar
API Java Doc can be found under ${Karma-Client-Core}/doc

==========================
3 Karma Service Client Use Cases
==========================

3.1) Use Cases through command line:

	There are 3 sample notification and 1 query files under sample/ directory. 
	
	*Send these notifications using the following command:	
	./bin/sendNotification.sh config/karma.properties ${Karma-Client-Core}/samples/notification/sendingResponse.xml	
	./bin/sendNotification.sh config/karma.properties ${Karma-Client-Core}/samples/notification/ sendingResponseStatus.xml	
	./bin/sendNotification.sh config/karma.properties ${Karma-Client-Core}/samples/notification/ serviceInvoked.xml
	or,
	ant sendNotification -Dnotification=${Karma-Client-Core}/samples/notification/sendingResponse.xml 
	ant sendNotification -Dnotification=${Karma-Client-Core}/samples/notification/sendingResponseStatus.xml
	ant sendNotification -Dnotification=${Karma-Client-Core}/samples/notification/serviceInvoked.xml
	
	*Query:	
	./bin/query.sh config/karma.properties ${Karma-Client-Core}/samples/notification/getWorkflowGraphRequest.xml	
	or,	
	ant query -Dquery=${Karma-Client-Core}/samples/notification/getWorkflowGraphRequest.xml


3.2) Use Cases through Karma Service Client API calls
There are 3 sample code for sending 3 different types of notifications to the Karma Server, under test/ directory. These sample code can be compiled and run through command line.

	./bin/KarmaRun.sh <Main Class> <Arguments>
	or,	
	ant run -DrunClass=< Main Class > -DrunArgs=”<Arguments>”


